name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/docs
    metadata:
      title: 'Display Swagger API page.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: |
          <!-- HTML for static distribution bundle build -->
          <!DOCTYPE html>
          <html lang="en">
          <head>
            <meta charset="UTF-8">
            <title>MedHive Api Documentation</title>
            <link href="https://fonts.googleapis.com/css?family=Open+Sans:400,700|Source+Code+Pro:300,600|Titillium+Web:400,600,700" rel="stylesheet">
            <link rel="stylesheet" type="text/css" href="http://medhive-mvp.herokuapp.com/docs/asset/swagger-ui.css?v=b47dcdb59251cf1254ee38395c18b5b9" >
            <link rel="icon" type="image/png" href="http://medhive-mvp.herokuapp.com/docs/asset/favicon-32x32.png?v=40d4f2c38d1cd854ad463f16373cbcb6" sizes="32x32" />
            <link rel="icon" type="image/png" href="http://medhive-mvp.herokuapp.com/docs/asset/favicon-16x16.png?v=f0ae831196d55d8f4115b6c5e8ec5384" sizes="16x16" />
            <style>
              html
              {
                  box-sizing: border-box;
                  overflow: -moz-scrollbars-vertical;
                  overflow-y: scroll;
              }
              *,
              *:before,
              *:after
              {
                  box-sizing: inherit;
              }

              body {
                margin:0;
                background: #fafafa;
              }
            </style>
          </head>

          <body>

          <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" style="position:absolute;width:0;height:0">
            <defs>
              <symbol viewBox="0 0 20 20" id="unlocked">
                    <path d="M15.8 8H14V5.6C14 2.703 12.665 1 10 1 7.334 1 6 2.703 6 5.6V6h2v-.801C8 3.754 8.797 3 10 3c1.203 0 2 .754 2 2.199V8H4c-.553 0-1 .646-1 1.199V17c0 .549.428 1.139.951 1.307l1.197.387C5.672 18.861 6.55 19 7.1 19h5.8c.549 0 1.428-.139 1.951-.307l1.196-.387c.524-.167.953-.757.953-1.306V9.199C17 8.646 16.352 8 15.8 8z"></path>
              </symbol>

              <symbol viewBox="0 0 20 20" id="locked">
                <path d="M15.8 8H14V5.6C14 2.703 12.665 1 10 1 7.334 1 6 2.703 6 5.6V8H4c-.553 0-1 .646-1 1.199V17c0 .549.428 1.139.951 1.307l1.197.387C5.672 18.861 6.55 19 7.1 19h5.8c.549 0 1.428-.139 1.951-.307l1.196-.387c.524-.167.953-.757.953-1.306V9.199C17 8.646 16.352 8 15.8 8zM12 8H8V5.199C8 3.754 8.797 3 10 3c1.203 0 2 .754 2 2.199V8z"/>
              </symbol>

              <symbol viewBox="0 0 20 20" id="close">
                <path d="M14.348 14.849c-.469.469-1.229.469-1.697 0L10 11.819l-2.651 3.029c-.469.469-1.229.469-1.697 0-.469-.469-.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-.469-.469-.469-1.228 0-1.697.469-.469 1.228-.469 1.697 0L10 8.183l2.651-3.031c.469-.469 1.228-.469 1.697 0 .469.469.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c.469.469.469 1.229 0 1.698z"/>
              </symbol>

              <symbol viewBox="0 0 20 20" id="large-arrow">
                <path d="M13.25 10L6.109 2.58c-.268-.27-.268-.707 0-.979.268-.27.701-.27.969 0l7.83 7.908c.268.271.268.709 0 .979l-7.83 7.908c-.268.271-.701.27-.969 0-.268-.269-.268-.707 0-.979L13.25 10z"/>
              </symbol>

              <symbol viewBox="0 0 20 20" id="large-arrow-down">
                <path d="M17.418 6.109c.272-.268.709-.268.979 0s.271.701 0 .969l-7.908 7.83c-.27.268-.707.268-.979 0l-7.908-7.83c-.27-.268-.27-.701 0-.969.271-.268.709-.268.979 0L10 13.25l7.418-7.141z"/>
              </symbol>


              <symbol viewBox="0 0 24 24" id="jump-to">
                <path d="M19 7v4H5.83l3.58-3.59L8 6l-6 6 6 6 1.41-1.41L5.83 13H21V7z"/>
              </symbol>

              <symbol viewBox="0 0 24 24" id="expand">
                <path d="M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z"/>
              </symbol>

            </defs>
          </svg>

          <div id="swagger-ui"></div>

          <script src="http://medhive-mvp.herokuapp.com/docs/asset/swagger-ui-bundle.js?v=798d369d6387e66b7278e63cb950a32f"> </script>
          <script src="http://medhive-mvp.herokuapp.com/docs/asset/swagger-ui-standalone-preset.js?v=e3a4b013757e84ad70d1ef12270ba31a"> </script>
          <script>
          window.onload = function() {
            // Build a system
            const ui = SwaggerUIBundle({
              dom_id: '#swagger-ui',

              url: "http://medhive-mvp.herokuapp.com/docs/api-docs.json",
              operationsSorter: null,
              configUrl: null,
              validatorUrl: null,
              oauth2RedirectUrl: "http://medhive-mvp.herokuapp.com/api/oauth2-callback",

              requestInterceptor: function(request) {
                request.headers['X-CSRF-TOKEN'] = '';
                return request;
              },

              presets: [
                SwaggerUIBundle.presets.apis,
                SwaggerUIStandalonePreset
              ],

              plugins: [
                SwaggerUIBundle.plugins.DownloadUrl
              ],

              layout: "StandaloneLayout",

              persistAuthorization: true,
            })

            window.ui = ui
          }
          </script>
          </body>

          </html>
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/oauth2-callback
    metadata:
      title: 'Display Oauth2 callback pages.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: |
          <!doctype html>
          <html lang="en-US">
          <head>
              <title>Swagger UI: OAuth2 Redirect</title>
          </head>
          <body>
          <script>
              'use strict';
              function run () {
                  var oauth2 = window.opener.swaggerUIRedirectOauth2;
                  var sentState = oauth2.state;
                  var redirectUrl = oauth2.redirectUrl;
                  var isValid, qp, arr;

                  if (/code|token|error/.test(window.location.hash)) {
                      qp = window.location.hash.substring(1);
                  } else {
                      qp = location.search.substring(1);
                  }

                  arr = qp.split("&");
                  arr.forEach(function (v,i,_arr) { _arr[i] = '"' + v.replace('=', '":"') + '"';});
                  qp = qp ? JSON.parse('{' + arr.join() + '}',
                          function (key, value) {
                              return key === "" ? value : decodeURIComponent(value);
                          }
                  ) : {};

                  isValid = qp.state === sentState;

                  if ((
                    oauth2.auth.schema.get("flow") === "accessCode" ||
                    oauth2.auth.schema.get("flow") === "authorizationCode" ||
                    oauth2.auth.schema.get("flow") === "authorization_code"
                  ) && !oauth2.auth.code) {
                      if (!isValid) {
                          oauth2.errCb({
                              authId: oauth2.auth.name,
                              source: "auth",
                              level: "warning",
                              message: "Authorization may be unsafe, passed state was changed in server Passed state wasn't returned from auth server"
                          });
                      }

                      if (qp.code) {
                          delete oauth2.state;
                          oauth2.auth.code = qp.code;
                          oauth2.callback({auth: oauth2.auth, redirectUrl: redirectUrl});
                      } else {
                          let oauthErrorMsg;
                          if (qp.error) {
                              oauthErrorMsg = "["+qp.error+"]: " +
                                  (qp.error_description ? qp.error_description+ ". " : "no accessCode received from the server. ") +
                                  (qp.error_uri ? "More info: "+qp.error_uri : "");
                          }

                          oauth2.errCb({
                              authId: oauth2.auth.name,
                              source: "auth",
                              level: "error",
                              message: oauthErrorMsg || "[Authorization failed]: no accessCode received from the server"
                          });
                      }
                  } else {
                      oauth2.callback({auth: oauth2.auth, token: qp, isValid: isValid, redirectUrl: redirectUrl});
                  }
                  window.close();
              }

              window.addEventListener('DOMContentLoaded', function () {
                run();
              });
          </script>
          </body>
          </html>
        headers:
          content-type: 'text/html; charset=UTF-8'
          cache-control: 'no-cache, private'
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/login
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: slindgren@example.com
        type: string
      password:
        name: password
        description: 'Must be at least 6 characters.'
        required: true
        example: v
        type: string
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/register
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: djqkhoetzkfcuzcsfdeyciqwtyubimmcvttygurpjlmkdkvnxcbywwadzgwjsuxscbafyqivckkcxygtazgzuxtzknarxznpofzultydqjgwtzurohsnffwlqvkuevjcxklbhyptbeowwovvylinngzqtngwpbvnvhyydcgrfimexqjsyrjnxzaxvjkcdellsrqgwpxmjvpyysumxytkzsc
        type: string
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: marques.murray@example.org
        type: string
      password:
        name: password
        description: 'Must be at least 6 characters.'
        required: true
        example: lvjav
        type: string
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/logout
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/users/me
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/specialists
    metadata:
      title: 'Display all specialists'
      description: 'Get a listings of specialists'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"title":"Dr.","type":{"id":7,"name":"Pharmacist"},"user":{"name":"Gonzalo Hammes","email":"pat.rempel@example.net","display_picture":null}},{"title":"Prof.","type":{"id":8,"name":"Nurse"},"user":{"name":"Shea Monahan","email":"breana77@example.net","display_picture":null}}]}'
        headers: []
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/specialists
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'Must be at least 1 characters.'
        required: true
        example: a
        type: string
      type:
        name: type
        description: ''
        required: true
        example: nobis
        type: string
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/specialists/{id}'
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the specialist.'
        required: true
        example: 8
        type: integer
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - PUT
    uri: 'api/specialists/{id}'
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the specialist.'
        required: true
        example: 8
        type: integer
    queryParameters: []
    bodyParameters:
      specialist:
        name: specialist
        description: ''
        required: true
        example: exercitationem
        type: string
      title:
        name: title
        description: ''
        required: true
        example: voluptas
        type: string
      type:
        name: type
        description: ''
        required: true
        example: ut
        type: string
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/facilities
    metadata:
      title: 'Get all facilities'
      description: 'Display a listing of the resource.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"name":"Lockman-O''Kon","address":"237 Elouise Glen\nChristiansenshire, OR 39706-4624","type":{"id":8,"name":"Lab"}},{"name":"Jerde-Walter","address":"65631 Vicente Lodge\nBaileyview, MI 92197-2826","type":{"id":9,"name":"Clinic"}}]}'
        headers: []
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/facilities
    metadata:
      title: 'Store a newly created resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must be at least 3 characters.'
        required: true
        example: zb
        type: string
      address:
        name: address
        description: 'Must be at least 3 characters.'
        required: true
        example: ''
        type: string
      type:
        name: type
        description: ''
        required: true
        example: 403058.97304
        type: number
      user:
        name: user
        description: ''
        required: false
        example: null
        type: string
    responses:
      -
        status: 200
        content: '{"data":[{"name":"Russel, Gleason and O''Reilly","address":"6523 Sarah Lodge Suite 005\nO''Connellview, HI 11377","type":{"id":10,"name":"Pharmacy"}},{"name":"Gleichner, Heathcote and Murray","address":"2843 Franco Point Suite 669\nNorth Lizeth, KY 53657","type":{"id":11,"name":"Pharmacy"}}]}'
        headers: []
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/facilities/{id}'
    metadata:
      title: 'Display the specified resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the facility.'
        required: true
        example: 1
        type: integer
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - PUT
    uri: 'api/facilities/{id}'
    metadata:
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the facility.'
        required: true
        example: 10
        type: integer
    queryParameters: []
    bodyParameters:
      facility:
        name: facility
        description: ''
        required: true
        example: doloribus
        type: string
      name:
        name: name
        description: ''
        required: true
        example: aut
        type: string
      address:
        name: address
        description: ''
        required: true
        example: corporis
        type: string
      type:
        name: type
        description: ''
        required: true
        example: et
        type: string
      user:
        name: user
        description: ''
        required: false
        example: null
        type: string
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/openings
    metadata:
      title: 'Get all openings'
      description: 'Display a listing of the resource.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":3,"for":9,"facility":{"id":7,"name":"Wisozk-Kessler","address":"7163 Herman Squares Suite 110\nWest Deshaun, CT 43907","user_id":8,"type_id":12,"created_at":"2021-12-24T19:28:54.000000Z","updated_at":"2021-12-24T19:28:54.000000Z"},"type":true,"is_active":true},{"id":4,"for":10,"facility":{"id":8,"name":"Mosciski-Cummerata","address":"242 Daphne Lodge Apt. 074\nJodyborough, DE 58257","user_id":9,"type_id":13,"created_at":"2021-12-24T19:28:55.000000Z","updated_at":"2021-12-24T19:28:55.000000Z"},"type":true,"is_active":true}]}'
        headers: []
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/openings
    metadata:
      title: 'Store a newly created opening resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      for:
        name: for
        description: ''
        required: true
        example: minus
        type: string
      facility:
        name: facility
        description: ''
        required: true
        example: rerum
        type: string
      type:
        name: type
        description: ''
        required: true
        example: false
        type: boolean
    responses:
      -
        status: 200
        content: '{"data":[{"id":5,"for":11,"facility":{"id":9,"name":"Sauer, Ledner and Zemlak","address":"2144 Sunny Brook Suite 953\nSouth Gracielachester, SC 52787-0595","user_id":10,"type_id":14,"created_at":"2021-12-24T19:28:57.000000Z","updated_at":"2021-12-24T19:28:57.000000Z"},"type":true,"is_active":true},{"id":6,"for":12,"facility":{"id":10,"name":"Conn and Sons","address":"265 Lon Creek Apt. 279\nHipolitoton, NV 85226-0389","user_id":11,"type_id":15,"created_at":"2021-12-24T19:28:58.000000Z","updated_at":"2021-12-24T19:28:58.000000Z"},"type":true,"is_active":true}]}'
        headers: []
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/openings/{id}'
    metadata:
      title: 'Display the specified opening resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the opening.'
        required: true
        example: 19
        type: integer
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":7,"for":13,"facility":{"id":11,"name":"Klocko LLC","address":"5125 Littel Valley\nFadelmouth, NC 96122-3383","user_id":12,"type_id":16,"created_at":"2021-12-24T19:28:59.000000Z","updated_at":"2021-12-24T19:28:59.000000Z"},"type":true,"is_active":true},{"id":8,"for":14,"facility":{"id":12,"name":"Wuckert, Turcotte and Metz","address":"2171 Weldon Trace Suite 028\nRalphview, DE 92701-8758","user_id":13,"type_id":17,"created_at":"2021-12-24T19:29:00.000000Z","updated_at":"2021-12-24T19:29:00.000000Z"},"type":true,"is_active":true}]}'
        headers: []
        description: null
    responseFields: []
  -
    httpMethods:
      - PUT
    uri: 'api/openings/{id}'
    metadata:
      title: 'Update the specified opening resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the opening.'
        required: true
        example: 1
        type: integer
    queryParameters: []
    bodyParameters:
      for:
        name: for
        description: ''
        required: true
        example: sint
        type: string
      facility:
        name: facility
        description: ''
        required: true
        example: numquam
        type: string
      type:
        name: type
        description: ''
        required: true
        example: false
        type: boolean
      is_active:
        name: is_active
        description: ''
        required: true
        example: true
        type: boolean
    responses:
      -
        status: 200
        content: '{"data":[{"id":9,"for":15,"facility":{"id":13,"name":"Klein-Smitham","address":"289 Vicenta Spur Apt. 626\nSouth Mistyfurt, CO 74958-3552","user_id":14,"type_id":18,"created_at":"2021-12-24T19:29:02.000000Z","updated_at":"2021-12-24T19:29:02.000000Z"},"type":true,"is_active":true},{"id":10,"for":16,"facility":{"id":14,"name":"Fahey, Hansen and Carroll","address":"5849 Jermaine Meadows\nAnselside, VT 87375","user_id":15,"type_id":19,"created_at":"2021-12-24T19:29:03.000000Z","updated_at":"2021-12-24T19:29:03.000000Z"},"type":true,"is_active":true}]}'
        headers: []
        description: null
    responseFields: []
  -
    httpMethods:
      - DELETE
    uri: 'api/openings/{id}'
    metadata:
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the opening.'
        required: true
        example: 7
        type: integer
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
